// Copyright (c) Microsoft Corporation. All rights reserved.
// SPDX-License-Identifier: MIT

// Wifi
#define IOT_CONFIG_WIFI_SSID "MOVISTAR_FD60"
#define IOT_CONFIG_WIFI_PASSWORD "IoTHub2024"

// Enable macro IOT_CONFIG_USE_X509_CERT to use an x509 certificate to authenticate the IoT device.
// The two main modes of authentication are through SAS tokens (automatically generated by the
// sample using the provided device symmetric key) or through x509 certificates. Please choose the
// appropriate option according to your device authentication mode.

// #define IOT_CONFIG_USE_X509_CERT

#ifdef IOT_CONFIG_USE_X509_CERT

/*
 * Please set the define IOT_CONFIG_DEVICE_CERT below with
 * the content of your device x509 certificate.
 *
 * Example:
 * #define IOT_CONFIG_DEVICE_CERT "-----BEGIN CERTIFICATE-----\r\n" \
 * "MIIBJDCBywIUfeHrebBVa2eZAbouBgACp9R3BncwCgYIKoZIzj0EAwIwETEPMA0G\r\n" \
 * "A1UEAwwGRFBTIENBMB4XDTIyMDMyMjazMTAzN1oXDTIzMDMyMjIzMTAzN1owGTEX\r\n" \
 * "MBUGA1UEAwwOY29udG9zby1kZXZpY2UwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\r\n" \
 * .......
 * "YmGzdaHTb6P1W+p+jmc+jJn1MAoGCXqGSM49BAMCA0gAMEUCIEnbEMsAdGFroMwl\r\n" \
 * "vTfQahwsxN3xink9z1gtirrjQlqDAiEAyU+6TUJcG6d9JF+uJqsLFpsbbF3IzGAw\r\n" \
 * "yC+koNRC0MU=\r\n" \
 * "-----END CERTIFICATE-----"
 *
 */
#define IOT_CONFIG_DEVICE_CERT "Device Certificate"

/*
 * Please set the define IOT_CONFIG_DEVICE_CERT_PRIVATE_KEY below with
 * the content of your device x509 private key.
 *
 * Example:
 *
 * #define IOT_CONFIG_DEVICE_CERT_PRIVATE_KEY "-----BEGIN EC PRIVATE KEY-----\r\n" \
 * "MHcCAQEEIKGXkMMiO9D7jYpUjUGTBn7gGzeKPeNzCP83wbfQfLd9obAoGCCqGSM49\r\n" \
 * "AwEHoUQDQgAEU6nQoYbjgJvBwaeD6MyAYmOSDg0QhEdyyV337qrlIbDEKvFsn1El\r\n" \
 * "yRabc4dNp2Jhs3Xh02+j9Vvqfo5nPoyZ9Q==\r\n" \
 * "-----END EC PRIVATE KEY-----"
 *
 * Note the type of key may different in your case. Such as BEGIN PRIVATE KEY
 * or BEGIN RSA PRIVATE KEY.
 *
 */
#define IOT_CONFIG_DEVICE_CERT_PRIVATE_KEY "Device Certificate Private Key"

#endif // IOT_CONFIG_USE_X509_CERT

// Azure IoT Central
#define DPS_ID_SCOPE "0ne00A56BD4"

// #define IOT_CONFIG_DEVICE_ID "32ng6jftu8"       //General
// #define IOT_CONFIG_DEVICE_ID "1sbmjyrz1oa"      //Transelevador 1
// #define IOT_CONFIG_DEVICE_ID "1b66i9vydmw"      //Transelevador 2
// #define IOT_CONFIG_DEVICE_ID "oahkpmo0i1"       //Transelevador 3
// #define IOT_CONFIG_DEVICE_ID "97qu0wo8du"       //Robot
// #define IOT_CONFIG_DEVICE_ID "2ey0wvfshde"      //Linea empaquetado
// #define IOT_CONFIG_DEVICE_ID "ientu2u9jd"       //Modula 4
// #define IOT_CONFIG_DEVICE_ID "1qm1p41k645"      //Modula 11
// #define IOT_CONFIG_DEVICE_ID "1g1latrr3rl"      //AC Oficinas
#define IOT_CONFIG_DEVICE_ID "12yvbq8k0uc"      //Aire comprimido

// Use device key if not using certificates
#ifndef IOT_CONFIG_USE_X509_CERT

// #define IOT_CONFIG_DEVICE_KEY "EkT6ZvbB0yDF71AmEUQ75Or3w7Y4sQenDKFsJwZ24N4="        //General
// #define IOT_CONFIG_DEVICE_KEY "ZCJOH3zvqDBusCCTdtMHO2rcv4qWgVq5bzgkxwwIQIM="        //Transelevador 1
// #define IOT_CONFIG_DEVICE_KEY "FH7ktxpbRgW2Nq/ms0eANQS2ZKEpdKQorBa98xpM3+E="        //Transelevador 2
// #define IOT_CONFIG_DEVICE_KEY "afq88WexxzEbz26qV9WNv+ZqdSE5BePaZOyjR9zVGjw="        //Transelevador 3
// #define IOT_CONFIG_DEVICE_KEY "WzZA6yTH6+cC8P/uPQuFWLwwFXdzn+2fhfGpMTwsMXI="        //Robot
// #define IOT_CONFIG_DEVICE_KEY "BytnY5Dv11MkNg8w1BlrsyDJ89Mzq6TEVCTvfJEpDW4="        //Linea empaquetado
// #define IOT_CONFIG_DEVICE_KEY "VozkBOAZnwyogHpN28p9A/aR39x0WYyGYdTgLHhYCmY="        //Modula 4
// #define IOT_CONFIG_DEVICE_KEY "6feO9EMk5XJ6zYFHKa1Po98nZRuwhmQRyUb4x18DR1U="        //Modula 11
// #define IOT_CONFIG_DEVICE_KEY "4damq3m2Ji0HgMhc8bc3bf5QPJkq4TrCKTqDuaQxty0="        //AC Oficinas
#define IOT_CONFIG_DEVICE_KEY "qbNgnq2WQ6ybPzFc1qAUPNIiRx9WW6Bhz2VpNhPZRfE="        //Aire comprimido

#endif // IOT_CONFIG_USE_X509_CERT

// User-agent (url-encoded) provided by the MQTT client to Azure IoT Services.
// When developing for your own Arduino-based platform,
// please update the suffix with the format '(ard;<platform>)' as an url-encoded string.
#define AZURE_SDK_CLIENT_USER_AGENT "c%2F" AZ_SDK_VERSION_STRING "(ard%3Besp32)"

// Publish 1 message every 2 seconds.
#define TELEMETRY_FREQUENCY_IN_SECONDS 2

// For how long the MQTT password (SAS token) is valid, in minutes.
// After that, the sample automatically generates a new password and re-connects.
#define MQTT_PASSWORD_LIFETIME_IN_MINUTES 60
